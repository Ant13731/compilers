% haskellIntersect: https://hackage.haskell.org/package/ghc-internal-9.1201.0/docs/src/GHC.Internal.Data.OldList.html#intersect or https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-List.html#v:intersect
% llvmSetDocs: https://llvm.org/docs/ProgrammersManual.html#ds-set
% llvmliteLib: https://llvmlite.readthedocs.io/en/latest/index.html
@online{haskellIntersect,
    title={Core data structures and operations - Data.List},
    url={https://hackage.haskell.org/package/base-4.21.0.0/docs/Data-List.html#v:intersect},
    urldate={2025-04-30},
    year={2025},
}@online{llvmSetDocs,
title={LLVM Programmer's Manual},
url={https://llvm.org/docs/ProgrammersManual.html#ds-set},
urldate={2025-04-30},
year={2025},
}@online{llvmliteLib,
title={LLVMLite: A lightweight LLVM python binding for writing JIT compilers},
url={https://github.com/python/cpython/blob/main/Objects/dictobject.c},
urldate={2025-04-30},
year={2025},
}
@article{spivey1989birthday,
author = {Spivey, J. M.},
title = {An introduction to Z and formal specifications},
year = {1989},
issue_date = {January 1989},
publisher = {Michael Faraday House},
address = {GBR},
volume = {4},
number = {1},
% issn = {0268-6961},
doi = {10.1049/sej.1989.0006},
journal = {Softw. Eng. J.},
month = jan,
pages = {40-50},
numpages = {11}
}
@online{pythonDictImplementation,
    title={Python/cpython: dictobject.c},
    url={https://github.com/python/cpython/blob/main/Objects/dictobject.c},
    urldate={2025-04-27},
    year={2025},
}
@online{boostBimap1,
    title={Boost C++ Libraries: Boost.Bimap},
    author={Matias Capeletto},
    url={https://www.boost.org/doc/libs/1_85_0/libs/bimap/doc/html/index.html},
    urldate={2025-04-27},
    year={2012},
}
@online{boostBimap2,
    title={The Boost C++ Libraries: Chapter 13. Boost.Bimap},
    author={Boris Schaling},
    url={https://theboostcpplibraries.com/boost.bimap},
    urldate={2025-04-27},
    year={2025},
}
@online{bimapStackOverflow,
    title={Is there a more efficient implementation for a bidirectional map?},
    publisher={Stack Overflow},
    url={https://stackoverflow.com/questions/21760343/is-there-a-more-efficient-implementation-for-a-bidirectional-map},
    urldate={2025-04-27},
    year={2019},
}

@book{griesAndSchneider,
  title={A Logical Approach to Discrete Math},
  author={Gries, D. and Schneider, F.B.},
%   lccn={lc93027848},
  series={Monographs in Computer Science},
  doi={10.1007/978-1-4757-3837-7},
  year={1993},
  publisher={Springer New York}
}

@online{pythonGrammar,
    title={Python 3.13 Reference: Full Grammar specification},
    publisher={Python Software Foundation},
    url={https://docs.python.org/3/reference/grammar.html},
    urldate={2025-04-27},
    year={2025},
}
@online{lark,
    title={Lark-Parser/lark},
    publisher={GitHub},
    url={https://github.com/lark-parser/lark},
    urldate={2025-04-27},
    year={2025},
}
@online{haskellCore,
  title={The Architecture of Open Source Applications (Volume 2) The Glasgow Haskell Compiler},
  author={Marlow, Simon and Peyton-Jones, Simon},
  % series={The Architecture of Open Source Applications},
  url={https://aosabook.org/en/v2/ghc.html},
  year={2012},
}

% # egglogPython
% @online{egglogPython,
%     title={Egglog Python},
%     url={https://egglog-python.readthedocs.io/latest/},
%     urldate={2025-04-27},
%     year={2025},
% }
% # eggPaper
% @article{eggPaper,
% author = {Willsey, Max and Nandi, Chandrakana and Wang, Yisu Remy and Flatt, Oliver and Tatlock, Zachary and Panchekha, Pavel},
% title = {egg: Fast and extensible equality saturation},
% year = {2021},
% issue_date = {January 2021},
% publisher = {Association for Computing Machinery},
% address = {New York, NY, USA},
% volume = {5},
% number = {POPL},
% doi = {10.1145/3434304},
% abstract = {An e-graph efficiently represents a congruence relation over many expressions. Although they were originally developed in the late 1970s for use in automated theorem provers, a more recent technique known as equality saturation repurposes e-graphs to implement state-of-the-art, rewrite-driven compiler optimizations and program synthesizers. However, e-graphs remain unspecialized for this newer use case. Equality saturation workloads exhibit distinct characteristics and often require ad-hoc e-graph extensions to incorporate transformations beyond purely syntactic rewrites.  This work contributes two techniques that make e-graphs fast and extensible, specializing them to equality saturation. A new amortized invariant restoration technique called rebuilding takes advantage of equality saturation's distinct workload, providing asymptotic speedups over current techniques in practice. A general mechanism called e-class analyses integrates domain-specific analyses into the e-graph, reducing the need for ad hoc manipulation.  We implemented these techniques in a new open-source library called egg. Our case studies on three previously published applications of equality saturation highlight how egg's performance and flexibility enable state-of-the-art results across diverse domains.},
% journal = {Proc. ACM Program. Lang.},
% month = {jan},
% articleno = {23},
% numpages = {29},
% keywords = {equality saturation, e-graphs}
% }
% # eggRust
% @online{eggRust,
%     title={Crate Egg},
%     url={https://docs.rs/egg/latest/egg/},
%     urldate={2025-04-27},
%     year={2025},
% }